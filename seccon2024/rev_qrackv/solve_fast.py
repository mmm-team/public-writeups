from pwn import *

checkdata = b'\x9e\x1f\xc5\xb8\x10\x81%\xc1_\xd35\xbb\xf8Tc\xa8\x18\x80\\M?\xcbl\xb1\xa0\x0b2\xb4t\xd0>\x80\xd8HM?\xd6\x8c\x964\x11\xd4?\xb8*\xff\xd4\n\x7f\xc6D\x82\xbe,g\x02B\x1eX\xce\xf1\x02\xd3!\xef\x92\xde\x19#8\x86P\xba\x8e\xca\xc6\xe7\x9c\x1f\xc4\xf9\x7f$\xc7\x0b 4\xd59R\xb745\x88$\xe4\xa1\xef\xc6;\xf5\x93J\x10\x13\xcf\xf3\xcf\xc2\x99)\x91\x80\xc4\x8b\x99\xd0\x8b\x17x\xb8\xb2\xff\xb8sL}~]nQd\xb8\x0b\xa8\xcb\xe9\\\xa2lv\xcf\xbb\xe5\xf5-\x17\x9c\xe7\xbc{\x08\xc7\xa0\xe9\xeeO0\xcb#~\xde\xbb\xb6\x04\x91\xc0\xcaM\xe5.\xc7_\xfe\xd6\xee/\x15L\xdd.\xd80\xc3\'\xa1\x1a\x81\x8f"U\x0b\xd25\xd8EAH\xcb\xc8J8\xa1\xe9\x9dh-\xf6\xa7\x1c0vp5\xfe\xf28\xbd[K\x06\xb9\x01\xb7\xd30\xafhI\x93\x18D'
check = []
for i in range(9):
    index = pow(3, i+1, 29)
    check.append(u64(checkdata[index*8:index*8+8]))

import itertools

flag = b''

for i in range(9):
    x = check[i]
    x = ((x - 0x9A10A8B923AC8BF) * pow(0x9282F38FD9DE6BB, -1, 0xFFFFFFFFFFFFFFC5)) % 0xFFFFFFFFFFFFFFC5
    x = p64(x)
    for p in itertools.permutations(x):
        p = u64(bytes(p))
        p = ((p - 0x9A10A8B923AC8BF) * pow(0x9282F38FD9DE6BB, -1, 0xFFFFFFFFFFFFFFC5)) % 0xFFFFFFFFFFFFFFC5
        p = p64(p)
        if all(c in b'SECCON{0123456789abcdef}' for c in p):
            flag += p
            print(flag)
            break
    else:
        print('bad?')
        1/0
